{
  "contractName": "CAP",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_custom_fallback",
          "type": "string"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506012600460006101000a81548160ff021916908360ff1602179055506b033b2e3c9fd0803ce80000006005819055506040805190810160405280600e81526020017f4341504f2044657820546f6b656e0000000000000000000000000000000000008152506002908051906020019061008b929190610123565b506040805190810160405280600381526020017f4341500000000000000000000000000000000000000000000000000000000000815250600390805190602001906100d7929190610123565b50600554600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506101c8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016457805160ff1916838001178555610192565b82800160010185558215610192579182015b82811115610191578251825591602001919060010190610176565b5b50905061019f91906101a3565b5090565b6101c591905b808211156101c15760008160009055506001016101a9565b5090565b90565b610ea180620001d86000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd14610123578063313ce5671461014e57806370a082311461017f57806395d89b41146101d6578063a9059cbb14610266578063be45fd62146102cb578063f6368f8a14610376575b600080fd5b34801561009f57600080fd5b506100a8610467565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b50610138610509565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b50610163610513565b604051808260ff1660ff16815260200191505060405180910390f35b34801561018b57600080fd5b506101c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052a565b6040518082815260200191505060405180910390f35b3480156101e257600080fd5b506101eb610573565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022b578082015181840152602081019050610210565b50505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027257600080fd5b506102b1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610615565b604051808215151515815260200191505060405180910390f35b3480156102d757600080fd5b5061035c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061064e565b604051808215151515815260200191505060405180910390f35b34801561038257600080fd5b5061044d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610685565b604051808215151515815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b6000600554905090565b6000600460009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561060b5780601f106105e05761010080835404028352916020019161060b565b820191906000526020600020905b8154815290600101906020018083116105ee57829003601f168201915b5050505050905090565b60006060610622846109c2565b15610639576106328484836109d5565b9150610647565b610644848483610ca0565b91505b5092915050565b6000610659846109c2565b15610670576106698484846109d5565b905061067e565b61067b848484610ca0565b90505b9392505050565b6000610690856109c2565b156109ac578361069f3361052a565b10156106aa57600080fd5b6106bc6106b63361052a565b85610e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061071161070b8661052a565b85610e57565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff166000836040518082805190602001908083835b6020831015156107a3578051825260208201915060208101905060208303925061077e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207c01000000000000000000000000000000000000000000000000000000009004903387876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828051906020019080838360005b83811015610884578082015181840152602081019050610869565b50505050905090810190601f1680156108b15780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af1935050505015156108d157fe5b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1686866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561096857808201518184015260208101905061094d565b50505050905090810190601f1680156109955780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3600190506109ba565b6109b7858585610ca0565b90505b949350505050565b600080823b905060008111915050919050565b600080836109e23361052a565b10156109ed57600080fd5b6109ff6109f93361052a565b85610e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a54610a4e8661052a565b85610e57565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508490508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3386866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b5c578082015181840152602081019050610b41565b50505050905090810190601f168015610b895780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1686866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c59578082015181840152602081019050610c3e565b50505050905090810190601f168015610c865780820380516001836020036101000a031916815260200191505b50935050505060405180910390a360019150509392505050565b600082610cac3361052a565b1015610cb757600080fd5b610cc9610cc33361052a565b84610e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e610d188561052a565b84610e57565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610df8578082015181840152602081019050610ddd565b50505050905090810190601f168015610e255780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3600190509392505050565b6000828211151515610e4c57fe5b818303905092915050565b6000808284019050838110151515610e6b57fe5b80915050929150505600a165627a7a72305820fcc90b1f580c806d0526e55be9690c199f01e9ac4bdfb41870659ce89c15e1f40029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461009357806318160ddd14610123578063313ce5671461014e57806370a082311461017f57806395d89b41146101d6578063a9059cbb14610266578063be45fd62146102cb578063f6368f8a14610376575b600080fd5b34801561009f57600080fd5b506100a8610467565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e85780820151818401526020810190506100cd565b50505050905090810190601f1680156101155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012f57600080fd5b50610138610509565b6040518082815260200191505060405180910390f35b34801561015a57600080fd5b50610163610513565b604051808260ff1660ff16815260200191505060405180910390f35b34801561018b57600080fd5b506101c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052a565b6040518082815260200191505060405180910390f35b3480156101e257600080fd5b506101eb610573565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022b578082015181840152602081019050610210565b50505050905090810190601f1680156102585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027257600080fd5b506102b1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610615565b604051808215151515815260200191505060405180910390f35b3480156102d757600080fd5b5061035c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061064e565b604051808215151515815260200191505060405180910390f35b34801561038257600080fd5b5061044d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610685565b604051808215151515815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b6000600554905090565b6000600460009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561060b5780601f106105e05761010080835404028352916020019161060b565b820191906000526020600020905b8154815290600101906020018083116105ee57829003601f168201915b5050505050905090565b60006060610622846109c2565b15610639576106328484836109d5565b9150610647565b610644848483610ca0565b91505b5092915050565b6000610659846109c2565b15610670576106698484846109d5565b905061067e565b61067b848484610ca0565b90505b9392505050565b6000610690856109c2565b156109ac578361069f3361052a565b10156106aa57600080fd5b6106bc6106b63361052a565b85610e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061071161070b8661052a565b85610e57565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff166000836040518082805190602001908083835b6020831015156107a3578051825260208201915060208101905060208303925061077e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207c01000000000000000000000000000000000000000000000000000000009004903387876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828051906020019080838360005b83811015610884578082015181840152602081019050610869565b50505050905090810190601f1680156108b15780820380516001836020036101000a031916815260200191505b50935050505060006040518083038185885af1935050505015156108d157fe5b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1686866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561096857808201518184015260208101905061094d565b50505050905090810190601f1680156109955780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3600190506109ba565b6109b7858585610ca0565b90505b949350505050565b600080823b905060008111915050919050565b600080836109e23361052a565b10156109ed57600080fd5b6109ff6109f93361052a565b85610e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a54610a4e8661052a565b85610e57565b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508490508073ffffffffffffffffffffffffffffffffffffffff1663c0ee0b8a3386866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b5c578082015181840152602081019050610b41565b50505050905090810190601f168015610b895780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610baa57600080fd5b505af1158015610bbe573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1686866040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c59578082015181840152602081019050610c3e565b50505050905090810190601f168015610c865780820380516001836020036101000a031916815260200191505b50935050505060405180910390a360019150509392505050565b600082610cac3361052a565b1015610cb757600080fd5b610cc9610cc33361052a565b84610e3e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e610d188561052a565b84610e57565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610df8578082015181840152602081019050610ddd565b50505050905090810190601f168015610e255780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3600190509392505050565b6000828211151515610e4c57fe5b818303905092915050565b6000808284019050838110151515610e6b57fe5b80915050929150505600a165627a7a72305820fcc90b1f580c806d0526e55be9690c199f01e9ac4bdfb41870659ce89c15e1f40029",
  "sourceMap": "55:237:1:-;;;89:200;8:9:-1;5:2;;;30:1;27;20:12;5:2;89:200:1;122:2;111:8;;:13;;;;;;;;;;;;;;;;;;145:6;131:11;:20;;;;197:23;;;;;;;;;;;;;;;;;;:4;:23;;;;;;;;;;;;:::i;:::-;;227:14;;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;271:11;;248:8;:20;257:10;248:20;;;;;;;;;;;;;;;:34;;;;55:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "55:237:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:77:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:77:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;377:77:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;775:99:3;;;;;;;;;;;;;;;;;;;;;;;633:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;633:88:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3805:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3805:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;501:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;501:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:401;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2066:401:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:263;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:263:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:595;;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:595:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:77;414:12;444:4;437:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:77;:::o;775:99::-;819:20;857:11;;850:18;;775:99;:::o;633:88::-;674:15;707:8;;;;;;;;;;;700:15;;633:88;:::o;3805:106::-;3861:12;3889:8;:16;3898:6;3889:16;;;;;;;;;;;;;;;;3882:23;;3805:106;;;:::o;501:83::-;540:14;572:6;565:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:83;:::o;2066:401::-;2126:12;2281:18;2309:15;2320:3;2309:10;:15::i;:::-;2306:158;;;2344:38;2363:3;2368:6;2376:5;2344:18;:38::i;:::-;2337:45;;;;2306:158;2419:37;2437:3;2442:6;2450:5;2419:17;:37::i;:::-;2412:44;;2066:401;;;;;;:::o;1667:263::-;1740:12;1772:15;1783:3;1772:10;:15::i;:::-;1769:158;;;1807:38;1826:3;1831:6;1839:5;1807:18;:38::i;:::-;1800:45;;;;1769:158;1882:37;1900:3;1905:6;1913:5;1882:17;:37::i;:::-;1875:44;;1667:263;;;;;;:::o;974:595::-;1072:12;1104:15;1115:3;1104:10;:15::i;:::-;1101:465;;;1160:6;1136:21;1146:10;1136:9;:21::i;:::-;:30;1132:44;;;1168:8;;;1132:44;1210:38;1218:21;1228:10;1218:9;:21::i;:::-;1241:6;1210:7;:38::i;:::-;1187:8;:20;1196:10;1187:20;;;;;;;;;;;;;;;:61;;;;1275:31;1283:14;1293:3;1283:9;:14::i;:::-;1299:6;1275:7;:31::i;:::-;1259:8;:13;1268:3;1259:13;;;;;;;;;;;;;;;:47;;;;1324:3;:8;;1339:1;1359:16;1349:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1349:27:3;;;;;;;;;;;;;;;;1324:81;;;;1379:10;1391:6;1399:5;1324:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1324:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:89;;;;;;1443:3;1422:40;;1431:10;1422:40;;;1448:6;1456:5;1422:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1422:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:4;1473:11;;;;1101:465;1521:37;1539:3;1544:6;1552:5;1521:17;:37::i;:::-;1514:44;;974:595;;;;;;;:::o;2564:282::-;2621:16;2648:11;2798:5;2786:18;2776:28;;2836:1;2829:6;:8;2821:17;;2564:282;;;;:::o;3340:457::-;3424:12;3618:25;3473:6;3449:21;3459:10;3449:9;:21::i;:::-;:30;3445:44;;;3481:8;;;3445:44;3519:38;3527:21;3537:10;3527:9;:21::i;:::-;3550:6;3519:7;:38::i;:::-;3496:8;:20;3505:10;3496:20;;;;;;;;;;;;;;;:61;;;;3580:31;3588:14;3598:3;3588:9;:14::i;:::-;3604:6;3580:7;:31::i;:::-;3564:8;:13;3573:3;3564:13;;;;;;;;;;;;;;;:47;;;;3663:3;3618:49;;3674:8;:22;;;3697:10;3709:6;3717:5;3674:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3674:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3674:49:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3674:49:3;;;;3756:3;3735:40;;3744:10;3735:40;;;3761:6;3769:5;3735:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3735:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3789:4;3782:11;;3340:457;;;;;;:::o;2919:346::-;3002:12;3051:6;3027:21;3037:10;3027:9;:21::i;:::-;:30;3023:44;;;3059:8;;;3023:44;3097:38;3105:21;3115:10;3105:9;:21::i;:::-;3128:6;3097:7;:38::i;:::-;3074:8;:20;3083:10;3074:20;;;;;;;;;;;;;;;:61;;;;3158:31;3166:14;3176:3;3166:9;:14::i;:::-;3182:6;3158:7;:31::i;:::-;3142:8;:13;3151:3;3142:13;;;;;;;;;;;;;;;:47;;;;3222:3;3201:40;;3210:10;3201:40;;;3227:6;3235:5;3201:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3201:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3255:4;3248:11;;2919:346;;;;;:::o;392:150:0:-;476:7;511:1;506;:6;;499:14;;;;;;534:1;530;:5;523:12;;392:150;;;;:::o;548:170::-;632:7;655:6;668:1;664;:5;655:14;;691:1;686;:6;;679:14;;;;;;710:1;703:8;;548:170;;;;;:::o",
  "source": "pragma solidity ^0.4.9;\n\nimport \"./ERC223_Token.sol\";\n\ncontract CAP is ERC223Token {\n    function CAP() {\n    \tdecimals = 18;\n    \ttotalSupply = 10**27; // 1 billion tokens, 18 decimal places\n    \tname = \"CAPO Dex Token\";\n    \tsymbol = \"CAP\";\n    \tbalances[msg.sender] = totalSupply;\n    }\t\n}\n\n\n",
  "sourcePath": "/Users/duongkhong/Documents/Projects/coincapo/smartcontracts/contracts/Token/CAP.sol",
  "ast": {
    "absolutePath": "/Users/duongkhong/Documents/Projects/coincapo/smartcontracts/contracts/Token/CAP.sol",
    "exportedSymbols": {
      "CAP": [
        197
      ]
    },
    "id": 198,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 164,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/duongkhong/Documents/Projects/coincapo/smartcontracts/contracts/Token/ERC223_Token.sol",
        "file": "./ERC223_Token.sol",
        "id": 165,
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 632,
        "src": "25:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 166,
              "name": "ERC223Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 631,
              "src": "71:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Token_$631",
                "typeString": "contract ERC223Token"
              }
            },
            "id": 167,
            "nodeType": "InheritanceSpecifier",
            "src": "71:11:1"
          }
        ],
        "contractDependencies": [
          162,
          272,
          631
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 197,
        "linearizedBaseContracts": [
          197,
          631,
          162,
          272
        ],
        "name": "CAP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "104:185:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        291
                      ],
                      "referencedDeclaration": 291,
                      "src": "111:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "122:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "111:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "111:13:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        293
                      ],
                      "referencedDeclaration": 293,
                      "src": "131:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000000000"
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "145:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3237",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "149:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_27_by_1",
                          "typeString": "int_const 27"
                        },
                        "value": "27"
                      },
                      "src": "145:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000000000"
                      }
                    },
                    "src": "131:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "131:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        287
                      ],
                      "referencedDeclaration": 287,
                      "src": "197:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4341504f2044657820546f6b656e",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "204:16:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_616517ae1b264f2db166cbc8343e269634bddde7fe1ee12698d327bb69975ac6",
                        "typeString": "literal_string \"CAPO Dex Token\""
                      },
                      "value": "CAPO Dex Token"
                    },
                    "src": "197:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "197:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        289
                      ],
                      "referencedDeclaration": 289,
                      "src": "227:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "434150",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "236:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ae84db5f261b79243f59814d93f1dbde51fca5310bcc93deb2f6cda7aa339542",
                        "typeString": "literal_string \"CAP\""
                      },
                      "value": "CAP"
                    },
                    "src": "227:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "227:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "248:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 191,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "257:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "257:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "248:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        293
                      ],
                      "referencedDeclaration": 293,
                      "src": "271:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "248:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "248:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 196,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "CAP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "101:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:0:1"
            },
            "scope": 197,
            "src": "89:200:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 198,
        "src": "55:237:1"
      }
    ],
    "src": "0:295:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/duongkhong/Documents/Projects/coincapo/smartcontracts/contracts/Token/CAP.sol",
    "exportedSymbols": {
      "CAP": [
        197
      ]
    },
    "id": 198,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 164,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/duongkhong/Documents/Projects/coincapo/smartcontracts/contracts/Token/ERC223_Token.sol",
        "file": "./ERC223_Token.sol",
        "id": 165,
        "nodeType": "ImportDirective",
        "scope": 198,
        "sourceUnit": 632,
        "src": "25:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 166,
              "name": "ERC223Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 631,
              "src": "71:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC223Token_$631",
                "typeString": "contract ERC223Token"
              }
            },
            "id": 167,
            "nodeType": "InheritanceSpecifier",
            "src": "71:11:1"
          }
        ],
        "contractDependencies": [
          162,
          272,
          631
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 197,
        "linearizedBaseContracts": [
          197,
          631,
          162,
          272
        ],
        "name": "CAP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "104:185:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 170,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        291
                      ],
                      "referencedDeclaration": 291,
                      "src": "111:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "122:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "111:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "111:13:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        293
                      ],
                      "referencedDeclaration": 293,
                      "src": "131:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000000000"
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "145:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3237",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "149:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_27_by_1",
                          "typeString": "int_const 27"
                        },
                        "value": "27"
                      },
                      "src": "145:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000000000"
                      }
                    },
                    "src": "131:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "131:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        287
                      ],
                      "referencedDeclaration": 287,
                      "src": "197:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4341504f2044657820546f6b656e",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "204:16:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_616517ae1b264f2db166cbc8343e269634bddde7fe1ee12698d327bb69975ac6",
                        "typeString": "literal_string \"CAPO Dex Token\""
                      },
                      "value": "CAPO Dex Token"
                    },
                    "src": "197:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "197:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        289
                      ],
                      "referencedDeclaration": 289,
                      "src": "227:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "434150",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "236:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ae84db5f261b79243f59814d93f1dbde51fca5310bcc93deb2f6cda7aa339542",
                        "typeString": "literal_string \"CAP\""
                      },
                      "value": "CAP"
                    },
                    "src": "227:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "227:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "248:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 191,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 189,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "257:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "257:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "248:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        293
                      ],
                      "referencedDeclaration": 293,
                      "src": "271:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "248:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "248:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 196,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "CAP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "101:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "104:0:1"
            },
            "scope": 197,
            "src": "89:200:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 198,
        "src": "55:237:1"
      }
    ],
    "src": "0:295:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {
        "0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8c7ef141e529c5263e2a45581d1c8a39f64dc5df",
      "transactionHash": "0xda204bfb9b06403aedf49ebaffd6686b975c93cb812f9825c400037c018c042f"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-19T08:39:29.110Z"
}